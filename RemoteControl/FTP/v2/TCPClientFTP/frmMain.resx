<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxStatus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <metadata name="imageListLED.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListLED.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD0
        EwAAAk1TRnQBSQFMAgEBBAEAATABAQEwAQEBIAEAASABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABgAMAAUADAAEBAQABCAYAASAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD//8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wAfAALxAvAC8RoAAvEC8ALxGgAB8gTxAfIaAAHxBPAB8RcAAfABBwHv
        AZIE7AGSAe8BBwHwFAAB8AEHAe8BkgTsAZIB7wEHAfAUAAHxArYGsAK2AfEUAAHwAQcB7wGSAewCrgHs
        AZIB7wEHAfASAAHwAe8B7QHsAm0E6gJtAewB7QHvAfAQAAHwAe8B7QHrAW0G6gFtAesB7QHvAfAQAAHx
        AbYBeQFSCEsBUgF5AbYB8RAAAfAB7wHtAW4BbQbqAW0BbgHtAe8B8A8AAbwB9wHrAW0B7AHtAe8EvAHv
        Ae0B6wFtAesB9wG8DgABvAH3AesBbQFyAXMBmASfAZgBcwFyAW0B6wH3AbwOAAHwAXkCSwFMAVIBegSa
        AXoCUgJLAXkB8A4AAbwBHAFuAW0BbgGOAZMEtwGTAW8BbgFtAW4BHAG8DQABvAH3AW0B7AH3CrwB9wHs
        AW0B9wG8DAABvAH3AW0BcgGYCp8BmAFyAesB9wG8DAABvAGwAVEBUgF6CpoBegFSAVEBsAG8DAABvAH3
        Am4BjgGUCLcBlAGOAm4B9wG8CwABvAGSAesB7AEHDLwBBwHsAesBkgG8CgABvAGSAesBcgKeCp8CngFy
        AesBkgG8CgAB8AGwAVIBWAF6DJoBegFYAVIBsAHwCgABvAGSAW4BbwKUBLcBlAW3ApQBbwFuAZIBvAkA
        AfAB9wHrAe0BBw68AQcB7QHrAfcB8AgAAfAB9wHrAZcHngKfB54BlwHrAfcB8AgAAfEBsAFSAVkMmgGg
        A5oBWQFSAbAB8QgAAfAB9wFuAW8QlAFvAW4B9wHwCAAB7wHsAe0DBwq8BQcB7QHsAe8IAAHvAesBlxKe
        AZcB6wHvCAABmQFSAVkFoAWaCKABWQFSAZkIAAHvAW4BbwEWEZQBbwFuAe8HAAHwAe0B7AgHBLwIBwHs
        Ae0B8AYAAfAB7QFyAeQTngFyAe0B8AYAAfEBeQFYAeUDoAGaDqAB5QFYAXkB8QYAAfAB7AFMAxYOlAEW
        AZQBFgFvAewB8AYAAQcB7AGSAe8TBwGSAewBBwYAAQcBcgGXAeQBfRGeAeQBlwHsAQcGAAGZAVgBXgLl
        EaAB5QFeAVgBmQYAAQcBbgFvBRYKlAEWAZQDFgFvAW4BBwUAAfEB9wHsArUB7xEHAe8BtQHsAfcFAAHx
        AfcBcgTkAn0LngHABOQBcgH3BQAB8gF5AVgG5QugBeUBWAF5BQAB8QEcAUwC4wcWApQKFgHjAW8BHAUA
        AfAB7QHsA7UB7w4HBLUB7AHtAfEEAAHwAewBVQbkAn0GngLABuQBdwHtAfEEAAHxAXkBOAjlBqAI5QFe
        AXkB8QQAAfABbgFGA+MQFgPjAUYBbgHwBAABvALsAvcDtQHvCQcB7wO1A/cB7QHsAfAEAAG8AXIBVRbk
        AXcB7AHwBAAB8AFYAfsCXhPlAl4BWAHwBAABvAFuAUYCFwPjDBYF4wEXAW4BvAQAAbwC7AHtAZIB9wW1
        A+8BtQLvBbUC9wGSAe0B7AG8BAABvAFyAlUBdxLkAZcBdwFVAXIBvAQAAbYBWAH7A14Q5QReAVgBvAQA
        AbwBbgJHAhcF4wYWBuMBFwFNAUcBbgG8BAABvAPsAe0E9wq1BPcD7QHsAbwEAAG8AXIDVRHkAZcBdwJV
        AXIBvAQAAbYBWAE4AfsFXgrlB14BWAG2BAABvAFLASYCRwMXDOMEFwJHAW4BvAQAAfAB7AGuAuwB7QGS
        BPcEtQX3ApIB7QTsAbwEAAHwAXIBMwNVAXcN5AKXBFUBcgG8BAAB8AFYATgC+wdeA+UJXgL7AVgB8AQA
        AbwBSwH5AUYCRwMXAeMCFwfjBBcBRwFGASYBbgG8BAAB8QHsAW0BrgLsAu0Ckgn3AZIC7QPsAa4B7AHw
        BAAB8QFyATMBVARVA5cF5ASXBVUBMwFyAfAEAAHyAVgCNwE4AfsQXgL7ATgBNwFYAfEEAAHwAW4BIAEl
        AUYCRw4XAkcBRgElASABbgHwBQAB7AESAW0BrgLsAu0BkgH3BJIB9wKSAfcC7QLsAesBbQESAewGAAHs
        AVQBMwFUA1UMlwRVAjMBcgYAAVgBNgI3ATgB+w5eAfsCOAE3ATEBWAYAAW4BJQEgASUBRgJHDBcBRwJG
        ASUCIAFuBgABkgISAW0B6wHsAe0Bkgf3ApIB9wGSAe0B7AFtAeoCEgGSBgAB9wFOAjMCVQF3DJcBdwFV
        AVQCMwFOAZIGAAF5ATADNwH7Dl4B+wM3ATABeQYAARwBJAElASABJQFGAhcD4wIXAuMCFwHjAhcBRgEl
        AiABJAEcBgAB7wFtAWcBEgFtAewBkg33AewBbQESAWcBbQHvBgAB7wFxAU4BMwFUAVUOlwFVAVQBMwFO
        AXEB7wYAAZkCNgI3AfsOXgH7ATcBMQEwATYBmQYAAZkBSwMlAUYBFwzjAW8BRgElASABJAFMAZkGAAHx
        AewCEgFtAewD9wHvAvcI7wHtAW0BEgETAewB8QYAAfEBkQJOAVUBdw+XAVUCTgGRAfEGAAEbAVcBLwEw
        ATcEXgHlAl4I5QFeATcBMAEvAVcBGwYAAfEBdAIkASUBRgJvCeMCFgFvAUwBJQIkAXQB8QcAAQcBbQET
        AW0B7AvvAwcB7QFtARMBbQEHCAABBwFxAk4Blw6YAZcBTwFOAXEBBwgAAZkBNQEvATYBXQ7lAV4BNgEv
        ATUBmQgAAZkBSwEkASUBTAsWApQBkwFMASUBJAFLAZkJAAGSAhMB7AHvCQcDvAEHAewCEgGSCgAB9wFs
        AU4BdwGYAggGmAUIAZcBTgFxAfcKAAF4Ai8BOgF+AZ8LoAGfAV0CLwF4CgABHAEqASQBTAGTAZkBmgeU
        ApoBGgGZAUwCKgEcCwAB7AEUAeoBkgEHAbwB8AK8BPAC8QHwAe8BbQETAewMAAHsAUkBcQGdCQgCwgEI
        AZgBcQFJAZEMAAFXAS4BNQFcAp8HoALDAZ8BfgE1AS8BVwwAAXMBIwFLAXQBmQMaAZoHGgGZAUsBKQFz
        DAAB8QHsAUMB6gHvAfAB8gTxA/IB8QEHAW0BFAHsAfEMAAHwAewBQwFsAZgBCAHyBPEC8gHzAfEBCAFx
        AUkB7AHwDAABCAFXASgBLwF+BMIFwwHCAZ8BNQEuAVcBwgwAAfABcwEjAUsBmQEaARsEGgQbAZkBSwEj
        AXMB8Q4AAewCEwHrAe8B8gL0Av8B8wEHAewB6gESAe0QAAHsARMBSQFyAbsB8gL0Av8B8wEIAZECbAHt
        EAABeAFJAS8BVwF+AcIE9gHDAZ8BVwIvAXgQAAFzAUQBSgFRAZkBGgT2ARsBmQF0AUsBSgEcEQAB7wHr
        ARIB6gHrBewCbQHsAe8SAAHvAesBEgFsAXIEkQFyAW0BbAHsAe8SAAG2A1ABVgVXAVYBUAFXAZkSAAHv
        AW4CSgFLBXMCSwFzAe8UAAEHAe0B6wFtAhIBbQHrAe0BBxYAAQcB7QHrAeoCEgFtAesB7QEHFgABtgGX
        BVABVgF4AZkWAAEHARwBbgRKAW4BHAEH/wAMAAFCAU0BPgcAAT4DAAEoAwABgAMAAUADAAEBAQABAQYA
        AQQWAAP//wD/AAMAIf8B+AEfAv8B+AEfAv8B+AEfAv8B+AEfAv8BwAEDAv8BwAEDAv8BwAEDAv8BwAED
        Av8CAAL/AgAC/wIAAv8CAAH/Af4CAAF/Af4CAAF/Af4CAAF/Af4CAAF/AfwCAAE/AfwCAAE/AfwCAAE/
        AfwCAAE/AfgCAAEfAfgCAAEfAfgCAAEfAfgCAAEfAfACAAEPAfACAAEPAfACAAEPAfACAAEPAfACAAEP
        AfACAAEPAfACAAEPAfACAAEPAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEH
        AeACAAEHAcACAAEHAcACAAEHAcACAAEHAcACAAEHAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAED
        AcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAED
        AcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAcACAAEDAeACAAEH
        AeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEH
        AeACAAEHAeACAAEHAeACAAEHAeACAAEHAeACAAEHAfACAAEPAfACAAEPAfACAAEPAfACAAEPAfgCAAEf
        AfgCAAEfAfgCAAEfAfgCAAEfAfwCAAE/AfwCAAE/AfwCAAE/AfwCAAE/AfwCAAE/AfwCAAE/AfwCAAE/
        AfwCAAE/Af8CAAL/AgAC/wIAAv8CAAL/AYABAQL/AYABAQL/AYABAQL/AYABAQL/AeABBwL/AeABBwL/
        AeABBwL/AeABByH/Cw==
</value>
  </data>
</root>